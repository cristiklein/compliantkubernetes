# NOTE! This action assumes that you will use `git tag` to trigger deployment.
# In particular, we use the git tag as the container image tag.
# Change on.push and env.TAG if your change management strategy is different.

name: app-deploy

on:
  push:
    tags:
      - v*

env:
  DOCKER_USER: 'robot$demo+ci-cd'
  DOMAIN: ckdemo.a1ck.io
  REGISTRY_PROJECT: demo
  TAG: ${{ github.ref_name }}

jobs:
  app-deploy:
    name: Deploy user-demo
    runs-on: ubuntu-latest
    environment: staging

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup KUBECONFIG
      env:
        KUBECONFIG_CONTENTS_B64: ${{ secrets.KUBECONFIG_CONTENTS_B64 }}
      run: |-
        mkdir -p ~/.kube
        echo $KUBECONFIG_CONTENTS_B64 | base64 -d --ignore-garbage > ~/.kube/config
        chmod 0400 ~/.kube/config

    - name: Login to container registry
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |-
        echo $DOCKER_PASSWORD \
          | docker login --username $DOCKER_USER --password-stdin harbor.$DOMAIN

    - name: Build and push container image
      working-directory: user-demo
      run: |-
        docker build -t harbor.$DOMAIN/$REGISTRY_PROJECT/ck8s-user-demo:$TAG .
        docker push harbor.$DOMAIN/$REGISTRY_PROJECT/ck8s-user-demo:$TAG

    - name: Deploy
      working-directory: user-demo
      run: |-
        helm upgrade \
            --install \
            myapp \
            deploy/ck8s-user-demo/ \
            --set image.repository=harbor.$DOMAIN/$REGISTRY_PROJECT/ck8s-user-demo \
            --set image.tag=$TAG \
            --set ingress.hostname=demo.$DOMAIN
