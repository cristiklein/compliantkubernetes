digraph compliance_basics {
    graph [fontname = "helvetica"];
    node [fontname = "helvetica"];
    edge [fontname = "helvetica"];

    compound=true;
    graph[labeljust="l", fontsize=20];

    subgraph cluster_regulations {
        label="Regulations";
        node[width=1, shape=box, style=rounded];

        HIPAA
        PDL
        GDPR
        CCPA
        FFFS
    }

    subgraph cluster_isms {
        label="Information Security Standards"
        node[width=1, shape=box, style=rounded];

        iso27k[label="ISO 27001"];
        soc2[label="SOC 2"];
        pcidss[label="PCI DSS"];
    }

    graph[width="4pt"];
    subgraph cluster_policies {
        label="Policies"
        node[width=1, shape=circle, fixedsize=true];

        { HIPAA, PDL, GDPR, CCPA, FFFS } -> Controls
        { iso27k, soc2, pcidss } -> Controls

        // Special node for alignment
        controls2[width=0, height=0, margin=0, style="invis"];

        node[width=1, shape=box, style=rounded];
        Controls -> {
            supplier[label="Supplier\nmanagement",fontsize=12]
            access[label="Access\ncontrol"]
            "Logging"
            "Backups"
            incident[label="Incident\nmanagement",fontsize=12]
            vulnerability[label="Vulnerability\nmanagement",fontsize=12]
            intrusion[label="Intrusion\ndetection"]
            network[label="Network\nsecurity"]
            crypto[label="Use of\ncryptography",fontsize=12]
        }
    }

    subgraph cluster_implementation {
        label="Compliant Kubernetes"

        node[
            shape=none,
            label="",
            width=1,
            height=1,
            fixedsize=true,
            imagescale=true
        ];

        access -> { dex[image="logos/dex.png"] }
        "Backups" -> { velero[image="logos/velero.png"] }
        "Logging" -> { elasticsearch[image="logos/elasticsearch.png"] }
        incident -> { prometheus[image="logos/prometheus.png"] }
        vulnerability
            -> { harbor[image="logos/harbor.png"] }
            -> { trivy[image="logos/trivy.png"] }
        intrusion -> { falco[image="logos/falco.png"] }
        network -> { calico[image="logos/project-calico.png"] }
        crypto
            -> { certmanager[image="logos/cert-manager.png"] }
            -> { letsencrypt[image="logos/letsencrypt.png"] }
    }

    subgraph cluster_provider {
        label="Compliant Cloud Provider"

        node[shape=none, label="", width=1, height=1, fixedsize=true, imagescale=true];
        edge[style=invis];

        // Special node to attach supplier management to.
        cloud_provider[width=0, height=0, margin=0];

        cloud_provider -> {
            aws[image="logos/cloud-providers/aws.png"];
            azure[image="logos/cloud-providers/azure.png"];
            citycloud[image="logos/cloud-providers/citycloud.png"]
            exoscale[image="logos/cloud-providers/exoscale.png"]
            safespring[image="logos/cloud-providers/safespring.png"]
            openstack[image="logos/cloud-providers/openstack.png"]
            upcloud[image="logos/cloud-providers/upcloud.png"]
            byovm[label="Bring\nYour Own\nVMs",shape=box]
            byom[label="Bring\nYour Own\nMetal",shape=box]
        }
    }

    // Make sure the rank of cloud providers is below those of
    // Compliant Kubernetes components.
    {
        node[shape=none, label="", style="invis", height="0", width="0"];
        edge[arrowhead=none];
        supplier -> supplier2 -> supplier3;
        supplier3 -> cloud_provider[arrowhead=normal, lhead=cluster_provider];
    }

    // Ensure alignment
    FFFS -> controls2 -> access[weight=1000,style="invis"];
    cloud_provider -> byom[weight=1000,style="invis"];
}
